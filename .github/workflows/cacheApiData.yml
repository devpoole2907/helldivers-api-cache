name: Poll Helldivers API and Cache Data

on:
  schedule:
    # Runs at every 10th minute
    - cron: '*/10 * * * *'

jobs:
  cache-planet-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install jq for JSON parsing
        run: sudo apt-get install jq

      - name: Fetch current war season
        id: fetch-season
        run: |
          CURRENT_SEASON=$(curl -s "https://helldivers-2.fly.dev/api" | jq -r '.current')
          echo "::set-output name=current_season::$CURRENT_SEASON"
      
      - name: Fetch planet statuses and save with timestamp
        run: |
          mkdir -p data
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          FILENAME="data/${TIMESTAMP}_planet_statuses.json"
          curl "https://helldivers-2.fly.dev/api/${{ steps.fetch-season.outputs.current_season }}/status" -o "$FILENAME"

      - name: Cleanup old data files
        run: |
          # Define the current date and time
          current_time=$(date -u +%s)

          # Loop through each file in the data directory
          for file in data/*_planet_statuses.json; do
              # Extract the timestamp from the filename
              filename=$(basename "$file")
              timestamp="${filename:0:20}"  # Extracts '2024-03-17T02:51:25'

                # Convert timestamp to seconds since the Unix epoch
                file_time=$(date -u -d "$timestamp" +%s)

              # Calculate the difference in hours
              diff=$(( (current_time - file_time) / 3600 ))

              # Check if the difference is greater than 12 hours
              if [ "$diff" -gt 12 ]; then
                  echo "Deleting $file (older than 12 hours)"
                    rm "$file"
              fi
          done

      - name: Commit and push if there are changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions Bot"
          git fetch origin main
          git rebase origin/main
          git add data/
          git commit -m "Update data for war season" -a || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.ACTION_BOT_KEY }}@github.com/devpoole2907/helldivers-api-cache.git
          git push


  fetch_news:
        runs-on: ubuntu-latest
        steps:
          - name: Check out repository
            uses: actions/checkout@v2
      
          - name: Setup Python
            uses: actions/setup-python@v2
            with:
              python-version: '3.x'

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install requests

          - name: Fetch and update feed data
            run: |
              import json
              import requests

              def fetch_news(from_timestamp):
                  url = f'https://helldiverstrainingmanual.com/api/v1/war/news?from={from_timestamp}'
                  response = requests.get(url)
                  return response.json()

              # Load existing feed data
              feed_file = 'feed/news.json'
              try:
                  with open(feed_file, 'r') as file:
                      news_data = json.load(file)
                      last_published = news_data[-1]['published']
              except (FileNotFoundError, IndexError):
                  news_data = []
                  last_published = 0  # or another suitable default value

              # Fetch new items
              new_news = fetch_news(last_published + 1)

              # Update the news data and the last published number
              if new_news:
                  news_data.extend(new_news)
                  last_published = new_news[-1]['published']

              # Save updated news data
              with open(feed_file, 'w') as file:
                  json.dump(news_data, file, indent=2)

            shell: python

          - name: Stage and commit changes
            run: |
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git add .
              git status
              git commit -m "Prepare for rebase" -a || echo "No changes to stage"

          - name: Fetch and rebase changes
            run: |
              git fetch origin main
              git rebase origin/main

          - name: Push changes
            run: |
              git push origin main




