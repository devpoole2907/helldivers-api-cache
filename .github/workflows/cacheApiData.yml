name: Poll Helldivers API and Cache Data

on:
  schedule:
    # Runs at every 15th minute
    - cron: '*/5 * * * *'

jobs:
  cache-planet-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install jq for JSON parsing
        run: sudo apt-get install jq

      - name: Fetch War ID
        run: |
          WAR_ID_JSON=$(curl "https://api.live.prod.thehelldiversgame.com/api/WarSeason/current/WarID")
          WAR_ID=$(echo $WAR_ID_JSON | jq '.id')
          echo "WAR_ID=$WAR_ID" >> $GITHUB_ENV

      - name: Fetch campaigns from new api
        run: |
          mkdir -p newData
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          NEW_DATA_FILENAME="newData/${TIMESTAMP}_campaigns.json"
          RESPONSE=$(curl -s -o "$NEW_DATA_FILENAME" -w "%{http_code}" "https://helldivers-2-dotnet.fly.dev/api/v1/campaigns")
          
          if [ "$RESPONSE" = "429" ]; then
            echo "Rate limit exceeded, not updating the file this time."
            rm "$NEW_DATA_FILENAME"
          else
            cp "$NEW_DATA_FILENAME" "newData/currentCampaigns.json"
          fi

      - name: Fetch planet statuses and save with timestamp
        run: |
          mkdir -p data
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          FILENAME="data/${TIMESTAMP}_planet_statuses.json"

           # Fetch data using the WAR_ID from the environment variable
          curl "https://helldivers-2.fly.dev/api/${WAR_ID}/status" -o "$FILENAME"

          # Check if JSON contains rate limit error
          if grep -q '{"error":"Rate limit exceeded."}' "$FILENAME"; then
            echo "Rate limit exceeded, not updating the file this time."
            rm "$FILENAME"  # Remove the file if rate limit is exceeded
          else
            cp "$FILENAME" "data/currentPlanetStatus.json"
          fi

      - name: Cleanup old data files
        run: |
          # Define the current date and time
          current_time=$(date -u +%s)

          # Loop through each file in the data directory
          for file in data/*_planet_statuses.json; do
              # Extract the timestamp from the filename
              filename=$(basename "$file")
              timestamp="${filename:0:20}"  # Extracts '2024-03-17T02:51:25'

                # Convert timestamp to seconds since the Unix epoch
                file_time=$(date -u -d "$timestamp" +%s)

              # Calculate the difference in hours
              diff=$(( (current_time - file_time) / 3600 ))

              # Check if the difference is greater than 12 hours
              if [ "$diff" -gt 12 ]; then
                  echo "Deleting $file (older than 12 hours)"
                    rm "$file"
              fi
          done

      - name: Commit and push if there are changes
        run: |
           git config --local user.email "action@github.com"
           git config --local user.name "GitHub Actions Bot"
           git add data/ newData/
           git commit -m "Update data for war season $WAR_ID" -a || echo "No changes to commit"
           git remote set-url origin https://x-access-token:${{ secrets.ACTION_BOT_KEY }}@github.com/devpoole2907/helldivers-api-cache.git
           git push

