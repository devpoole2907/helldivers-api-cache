name: Poll Helldivers API and Cache News Feed

on:
  schedule:
    # Runs at every 10th minute
    - cron: '*/10 * * * *'
jobs:
      fetch_news:
        runs-on: ubuntu-latest
        steps:
          - name: Check out repository
            uses: actions/checkout@v2

          - name: Setup Python
            uses: actions/setup-python@v2
            with:
              python-version: '3.x'

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install requests
          - name: Fetch and update feed data
            run: |
              import json
              import re
              import requests

              def sanitize_message(message):
              # Remove HTML-like tags from the message
                  return re.sub(r'<[^>]*>', '', message)
              
              def fetch_news(from_timestamp):
                  url = f'https://helldiverstrainingmanual.com/api/v1/war/news?from={from_timestamp}'
                  response = requests.get(url)
                  news_items = response.json()
                  # Sanitize each news item's message
                  for item in news_items:
                      item['message'] = sanitize_message(item['message'])
                  return news_items
              # Load existing feed data
              feed_file = 'feed/news.json'
              try:
                  with open(feed_file, 'r') as file:
                      news_data = json.load(file)
                      last_published = news_data[-1]['published']
              except (FileNotFoundError, IndexError):
                  news_data = []
                  last_published = 0  # or another suitable default value
              # Fetch new items
              new_news = fetch_news(last_published + 1)
              # Update the news data and the last published number
              if new_news:
                  news_data.extend(new_news)
                  last_published = new_news[-1]['published']
              # Save updated news data
              with open(feed_file, 'w') as file:
                  json.dump(news_data, file, indent=2)
            shell: python

          - name: Commit and push changes
            run: |
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git add feed/news.json
              git commit -m "Update news data" -a || echo "No changes to commit"
              git push
